////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version: P.28xd
//  \   \         Application: netgen
//  /   /         Filename: FPU_Multiplier.v
// /___/   /\     Timestamp: Thu Apr 17 17:25:16 2014
// \   \  /  \ 
//  \___\/\___\
//             
// Command	: -w -sim -ofmt verilog E:/CPU/ipcore_dir/tmp/_cg/FPU_Multiplier.ngc E:/CPU/ipcore_dir/tmp/_cg/FPU_Multiplier.v 
// Device	: 5vlx110tff1136-2
// Input file	: E:/CPU/ipcore_dir/tmp/_cg/FPU_Multiplier.ngc
// Output file	: E:/CPU/ipcore_dir/tmp/_cg/FPU_Multiplier.v
// # of Modules	: 1
// Design Name	: FPU_Multiplier
// Xilinx        : C:\Xilinx\14.2\ISE_DS\ISE\
//             
// Purpose:    
//     This verilog netlist is a verification model and uses simulation 
//     primitives which may not represent the true implementation of the 
//     device, however the netlist is functionally correct and should not 
//     be modified. This file cannot be synthesized and should only be used 
//     with supported simulation tools.
//             
// Reference:  
//     Command Line Tools User Guide, Chapter 23 and Synthesis and Simulation Design Guide, Chapter 6
//             
////////////////////////////////////////////////////////////////////////////////

`timescale 1 ns/1 ps

module FPU_Multiplier (
  clk, result, a, b
)/* synthesis syn_black_box syn_noprune=1 */;
  input clk;
  output [31 : 0] result;
  input [31 : 0] a;
  input [31 : 0] b;
  
  // synthesis translate_off
  
  wire sig00000001;
  wire sig00000002;
  wire sig00000003;
  wire sig00000004;
  wire sig00000005;
  wire sig00000006;
  wire sig00000007;
  wire sig00000008;
  wire sig00000009;
  wire sig0000000a;
  wire sig0000000b;
  wire sig0000000c;
  wire sig0000000d;
  wire sig0000000e;
  wire sig0000000f;
  wire sig00000010;
  wire sig00000011;
  wire sig00000012;
  wire sig00000013;
  wire sig00000014;
  wire sig00000015;
  wire sig00000016;
  wire sig00000017;
  wire sig00000018;
  wire sig00000019;
  wire sig0000001a;
  wire sig0000001b;
  wire sig0000001c;
  wire sig0000001d;
  wire sig0000001e;
  wire sig0000001f;
  wire sig00000020;
  wire sig00000021;
  wire sig00000022;
  wire sig00000023;
  wire sig00000024;
  wire sig00000025;
  wire sig00000026;
  wire sig00000027;
  wire sig00000028;
  wire sig00000029;
  wire sig0000002a;
  wire sig0000002b;
  wire sig0000002c;
  wire sig0000002d;
  wire sig0000002e;
  wire sig0000002f;
  wire sig00000030;
  wire sig00000031;
  wire sig00000032;
  wire sig00000033;
  wire sig00000034;
  wire sig00000035;
  wire sig00000036;
  wire sig00000037;
  wire sig00000038;
  wire sig00000039;
  wire sig0000003a;
  wire sig0000003b;
  wire sig0000003c;
  wire sig0000003d;
  wire sig0000003e;
  wire sig0000003f;
  wire sig00000040;
  wire sig00000041;
  wire sig00000042;
  wire sig00000043;
  wire sig00000044;
  wire sig00000045;
  wire sig00000046;
  wire sig00000047;
  wire sig00000048;
  wire sig00000049;
  wire sig0000004a;
  wire sig0000004b;
  wire sig0000004c;
  wire sig0000004d;
  wire sig0000004e;
  wire sig0000004f;
  wire sig00000050;
  wire sig00000051;
  wire sig00000052;
  wire sig00000053;
  wire sig00000054;
  wire sig00000055;
  wire sig00000056;
  wire sig00000057;
  wire sig00000058;
  wire sig00000059;
  wire sig0000005a;
  wire sig0000005b;
  wire sig0000005c;
  wire sig0000005d;
  wire sig0000005e;
  wire sig0000005f;
  wire sig00000060;
  wire sig00000061;
  wire sig00000062;
  wire sig00000063;
  wire sig00000064;
  wire sig00000065;
  wire sig00000066;
  wire sig00000067;
  wire sig00000068;
  wire sig00000069;
  wire sig0000006a;
  wire sig0000006b;
  wire sig0000006c;
  wire sig0000006d;
  wire sig0000006e;
  wire sig0000006f;
  wire sig00000070;
  wire sig00000071;
  wire sig00000072;
  wire sig00000073;
  wire sig00000074;
  wire sig00000075;
  wire sig00000076;
  wire sig00000077;
  wire sig00000078;
  wire sig00000079;
  wire sig0000007a;
  wire sig0000007b;
  wire sig0000007c;
  wire sig0000007d;
  wire sig0000007e;
  wire sig0000007f;
  wire sig00000080;
  wire sig00000081;
  wire sig00000082;
  wire \U0/op_inst/FLT_PT_OP/MULT.OP/OP/sign_op ;
  wire sig00000083;
  wire sig00000084;
  wire sig00000085;
  wire sig00000086;
  wire sig00000087;
  wire sig00000088;
  wire sig00000089;
  wire sig0000008a;
  wire sig0000008b;
  wire sig0000008c;
  wire sig0000008d;
  wire sig0000008e;
  wire sig0000008f;
  wire sig00000090;
  wire sig00000091;
  wire sig00000092;
  wire sig00000093;
  wire sig00000094;
  wire sig00000095;
  wire sig00000096;
  wire sig00000097;
  wire sig00000098;
  wire sig00000099;
  wire sig0000009a;
  wire sig0000009b;
  wire sig0000009c;
  wire sig0000009d;
  wire sig0000009e;
  wire sig0000009f;
  wire sig000000a0;
  wire sig000000a1;
  wire sig000000a2;
  wire sig000000a3;
  wire sig000000a4;
  wire sig000000a5;
  wire sig000000a6;
  wire sig000000a7;
  wire sig000000a8;
  wire sig000000a9;
  wire sig000000aa;
  wire sig000000ab;
  wire sig000000ac;
  wire sig000000ad;
  wire sig000000ae;
  wire sig000000af;
  wire sig000000b0;
  wire sig000000b1;
  wire sig000000b2;
  wire sig000000b3;
  wire sig000000b4;
  wire sig000000b5;
  wire sig000000b6;
  wire sig000000b7;
  wire sig000000b8;
  wire sig000000b9;
  wire sig000000ba;
  wire sig000000bb;
  wire sig000000bc;
  wire sig000000bd;
  wire sig000000be;
  wire sig000000bf;
  wire sig000000c0;
  wire sig000000c1;
  wire sig000000c2;
  wire sig000000c3;
  wire sig000000c4;
  wire sig000000c5;
  wire sig000000c6;
  wire sig000000c7;
  wire sig000000c8;
  wire sig000000c9;
  wire sig000000ca;
  wire sig000000cb;
  wire sig000000cc;
  wire sig000000cd;
  wire sig000000ce;
  wire sig000000cf;
  wire sig000000d0;
  wire sig000000d1;
  wire sig000000d2;
  wire sig000000d3;
  wire sig000000d4;
  wire sig000000d5;
  wire sig000000d6;
  wire sig000000d7;
  wire sig000000d8;
  wire sig000000d9;
  wire sig000000da;
  wire sig000000db;
  wire sig000000dc;
  wire sig000000dd;
  wire sig000000de;
  wire sig000000df;
  wire sig000000e0;
  wire sig000000e1;
  wire sig000000e2;
  wire sig000000e3;
  wire sig000000e4;
  wire sig000000e5;
  wire sig000000e6;
  wire sig000000e7;
  wire sig000000e8;
  wire sig000000e9;
  wire sig000000ea;
  wire sig000000eb;
  wire sig000000ec;
  wire sig000000ed;
  wire sig000000ee;
  wire sig000000ef;
  wire sig000000f0;
  wire sig000000f1;
  wire sig000000f2;
  wire sig000000f3;
  wire sig000000f4;
  wire sig000000f5;
  wire sig000000f6;
  wire sig000000f7;
  wire sig000000f8;
  wire sig000000f9;
  wire sig000000fa;
  wire sig000000fb;
  wire sig000000fc;
  wire sig000000fd;
  wire sig000000fe;
  wire sig000000ff;
  wire sig00000100;
  wire sig00000101;
  wire sig00000102;
  wire sig00000103;
  wire sig00000104;
  wire sig00000105;
  wire sig00000106;
  wire sig00000107;
  wire sig00000108;
  wire sig00000109;
  wire sig0000010a;
  wire sig0000010b;
  wire sig0000010c;
  wire sig0000010d;
  wire sig0000010e;
  wire sig0000010f;
  wire sig00000110;
  wire sig00000111;
  wire sig00000112;
  wire sig00000113;
  wire sig00000114;
  wire sig00000115;
  wire sig00000116;
  wire sig00000117;
  wire sig00000118;
  wire sig00000119;
  wire sig0000011a;
  wire sig0000011b;
  wire sig0000011c;
  wire sig0000011d;
  wire sig0000011e;
  wire sig0000011f;
  wire sig00000120;
  wire sig00000121;
  wire sig00000122;
  wire sig00000123;
  wire sig00000124;
  wire sig00000125;
  wire sig00000126;
  wire sig00000127;
  wire sig00000128;
  wire NLW_blk00000003_PATTERNBDETECT_UNCONNECTED;
  wire NLW_blk00000003_OVERFLOW_UNCONNECTED;
  wire NLW_blk00000003_UNDERFLOW_UNCONNECTED;
  wire NLW_blk00000003_CARRYCASCOUT_UNCONNECTED;
  wire NLW_blk00000003_MULTSIGNOUT_UNCONNECTED;
  wire \NLW_blk00000003_P<47>_UNCONNECTED ;
  wire \NLW_blk00000003_P<46>_UNCONNECTED ;
  wire \NLW_blk00000003_P<45>_UNCONNECTED ;
  wire \NLW_blk00000003_P<44>_UNCONNECTED ;
  wire \NLW_blk00000003_P<43>_UNCONNECTED ;
  wire \NLW_blk00000003_P<42>_UNCONNECTED ;
  wire \NLW_blk00000003_P<41>_UNCONNECTED ;
  wire \NLW_blk00000003_P<40>_UNCONNECTED ;
  wire \NLW_blk00000003_P<39>_UNCONNECTED ;
  wire \NLW_blk00000003_P<38>_UNCONNECTED ;
  wire \NLW_blk00000003_P<37>_UNCONNECTED ;
  wire \NLW_blk00000003_P<36>_UNCONNECTED ;
  wire \NLW_blk00000003_P<35>_UNCONNECTED ;
  wire \NLW_blk00000003_P<34>_UNCONNECTED ;
  wire \NLW_blk00000003_P<33>_UNCONNECTED ;
  wire \NLW_blk00000003_P<32>_UNCONNECTED ;
  wire \NLW_blk00000003_P<31>_UNCONNECTED ;
  wire \NLW_blk00000003_P<30>_UNCONNECTED ;
  wire \NLW_blk00000003_P<29>_UNCONNECTED ;
  wire \NLW_blk00000003_P<28>_UNCONNECTED ;
  wire \NLW_blk00000003_P<27>_UNCONNECTED ;
  wire \NLW_blk00000003_P<26>_UNCONNECTED ;
  wire \NLW_blk00000003_P<25>_UNCONNECTED ;
  wire \NLW_blk00000003_P<24>_UNCONNECTED ;
  wire \NLW_blk00000003_P<23>_UNCONNECTED ;
  wire \NLW_blk00000003_P<22>_UNCONNECTED ;
  wire \NLW_blk00000003_P<21>_UNCONNECTED ;
  wire \NLW_blk00000003_P<20>_UNCONNECTED ;
  wire \NLW_blk00000003_P<19>_UNCONNECTED ;
  wire \NLW_blk00000003_P<18>_UNCONNECTED ;
  wire \NLW_blk00000003_P<17>_UNCONNECTED ;
  wire \NLW_blk00000003_P<16>_UNCONNECTED ;
  wire \NLW_blk00000003_P<15>_UNCONNECTED ;
  wire \NLW_blk00000003_P<14>_UNCONNECTED ;
  wire \NLW_blk00000003_P<13>_UNCONNECTED ;
  wire \NLW_blk00000003_P<12>_UNCONNECTED ;
  wire \NLW_blk00000003_P<11>_UNCONNECTED ;
  wire \NLW_blk00000003_P<10>_UNCONNECTED ;
  wire \NLW_blk00000003_P<9>_UNCONNECTED ;
  wire \NLW_blk00000003_P<8>_UNCONNECTED ;
  wire \NLW_blk00000003_P<7>_UNCONNECTED ;
  wire \NLW_blk00000003_P<6>_UNCONNECTED ;
  wire \NLW_blk00000003_P<5>_UNCONNECTED ;
  wire \NLW_blk00000003_P<4>_UNCONNECTED ;
  wire \NLW_blk00000003_P<3>_UNCONNECTED ;
  wire \NLW_blk00000003_P<2>_UNCONNECTED ;
  wire \NLW_blk00000003_P<1>_UNCONNECTED ;
  wire \NLW_blk00000003_P<0>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003_CARRYOUT<0>_UNCONNECTED ;
  wire NLW_blk00000004_PATTERNBDETECT_UNCONNECTED;
  wire NLW_blk00000004_OVERFLOW_UNCONNECTED;
  wire NLW_blk00000004_UNDERFLOW_UNCONNECTED;
  wire NLW_blk00000004_CARRYCASCOUT_UNCONNECTED;
  wire NLW_blk00000004_MULTSIGNOUT_UNCONNECTED;
  wire \NLW_blk00000004_P<47>_UNCONNECTED ;
  wire \NLW_blk00000004_P<46>_UNCONNECTED ;
  wire \NLW_blk00000004_P<45>_UNCONNECTED ;
  wire \NLW_blk00000004_P<44>_UNCONNECTED ;
  wire \NLW_blk00000004_P<43>_UNCONNECTED ;
  wire \NLW_blk00000004_P<42>_UNCONNECTED ;
  wire \NLW_blk00000004_P<41>_UNCONNECTED ;
  wire \NLW_blk00000004_P<40>_UNCONNECTED ;
  wire \NLW_blk00000004_P<39>_UNCONNECTED ;
  wire \NLW_blk00000004_P<38>_UNCONNECTED ;
  wire \NLW_blk00000004_P<37>_UNCONNECTED ;
  wire \NLW_blk00000004_P<36>_UNCONNECTED ;
  wire \NLW_blk00000004_P<35>_UNCONNECTED ;
  wire \NLW_blk00000004_P<34>_UNCONNECTED ;
  wire \NLW_blk00000004_P<33>_UNCONNECTED ;
  wire \NLW_blk00000004_P<32>_UNCONNECTED ;
  wire \NLW_blk00000004_P<31>_UNCONNECTED ;
  wire \NLW_blk00000004_P<4>_UNCONNECTED ;
  wire \NLW_blk00000004_P<3>_UNCONNECTED ;
  wire \NLW_blk00000004_P<2>_UNCONNECTED ;
  wire \NLW_blk00000004_P<1>_UNCONNECTED ;
  wire \NLW_blk00000004_P<0>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000004_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000004_ACOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000004_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000004_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000004_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000004_CARRYOUT<0>_UNCONNECTED ;
  wire NLW_blk00000025_PATTERNBDETECT_UNCONNECTED;
  wire NLW_blk00000025_PATTERNDETECT_UNCONNECTED;
  wire NLW_blk00000025_OVERFLOW_UNCONNECTED;
  wire NLW_blk00000025_UNDERFLOW_UNCONNECTED;
  wire NLW_blk00000025_CARRYCASCOUT_UNCONNECTED;
  wire NLW_blk00000025_MULTSIGNOUT_UNCONNECTED;
  wire \NLW_blk00000025_PCOUT<47>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<46>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<45>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<44>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<43>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<42>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<41>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<40>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<39>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<38>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<37>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<36>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<35>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<34>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<33>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<32>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<31>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<30>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000025_PCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000025_P<40>_UNCONNECTED ;
  wire \NLW_blk00000025_P<31>_UNCONNECTED ;
  wire \NLW_blk00000025_P<6>_UNCONNECTED ;
  wire \NLW_blk00000025_P<5>_UNCONNECTED ;
  wire \NLW_blk00000025_P<4>_UNCONNECTED ;
  wire \NLW_blk00000025_P<3>_UNCONNECTED ;
  wire \NLW_blk00000025_P<2>_UNCONNECTED ;
  wire \NLW_blk00000025_P<1>_UNCONNECTED ;
  wire \NLW_blk00000025_P<0>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000025_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000025_ACOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000025_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000025_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000025_CARRYOUT<0>_UNCONNECTED ;
  wire [7 : 0] \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op ;
  wire [22 : 0] \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op ;
  assign
    result[31] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/sign_op ,
    result[30] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [7],
    result[29] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [6],
    result[28] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [5],
    result[27] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [4],
    result[26] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [3],
    result[25] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [2],
    result[24] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [1],
    result[23] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [0],
    result[22] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [22],
    result[21] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [21],
    result[20] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [20],
    result[19] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [19],
    result[18] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [18],
    result[17] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [17],
    result[16] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [16],
    result[15] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [15],
    result[14] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [14],
    result[13] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [13],
    result[12] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [12],
    result[11] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [11],
    result[10] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [10],
    result[9] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [9],
    result[8] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [8],
    result[7] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [7],
    result[6] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [6],
    result[5] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [5],
    result[4] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [4],
    result[3] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [3],
    result[2] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [2],
    result[1] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [1],
    result[0] = \U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [0];
  GND   blk00000001 (
    .G(sig00000001)
  );
  VCC   blk00000002 (
    .P(sig00000003)
  );
  DSP48E #(
    .ACASCREG ( 0 ),
    .ALUMODEREG ( 0 ),
    .AREG ( 0 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 0 ),
    .BREG ( 0 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 0 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 0 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT" ),
    .USE_PATTERN_DETECT ( "PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'hFFFFFFFE0000 ))
  blk00000003 (
    .CARRYIN(sig00000001),
    .CEA1(sig00000001),
    .CEA2(sig00000001),
    .CEB1(sig00000001),
    .CEB2(sig00000001),
    .CEC(sig00000001),
    .CECTRL(sig00000001),
    .CEP(sig00000001),
    .CEM(sig00000001),
    .CECARRYIN(sig00000001),
    .CEMULTCARRYIN(sig00000001),
    .CLK(clk),
    .RSTA(sig00000001),
    .RSTB(sig00000001),
    .RSTC(sig00000001),
    .RSTCTRL(sig00000001),
    .RSTP(sig00000001),
    .RSTM(sig00000001),
    .RSTALLCARRYIN(sig00000001),
    .CEALUMODE(sig00000001),
    .RSTALUMODE(sig00000001),
    .PATTERNBDETECT(NLW_blk00000003_PATTERNBDETECT_UNCONNECTED),
    .PATTERNDETECT(sig00000127),
    .OVERFLOW(NLW_blk00000003_OVERFLOW_UNCONNECTED),
    .UNDERFLOW(NLW_blk00000003_UNDERFLOW_UNCONNECTED),
    .CARRYCASCIN(sig00000001),
    .CARRYCASCOUT(NLW_blk00000003_CARRYCASCOUT_UNCONNECTED),
    .MULTSIGNIN(sig00000001),
    .MULTSIGNOUT(NLW_blk00000003_MULTSIGNOUT_UNCONNECTED),
    .A({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000003, a[22], a[21], a[20], a[19], a[18], a[17], a[16], 
a[15], a[14], a[13], a[12], a[11], a[10], a[9], a[8], a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
    .PCIN({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .B({sig00000001, b[16], b[15], b[14], b[13], b[12], b[11], b[10], b[9], b[8], b[7], b[6], b[5], b[4], b[3], b[2], b[1], b[0]}),
    .C({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001
, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001}),
    .CARRYINSEL({sig00000001, sig00000001, sig00000001}),
    .OPMODE({sig00000001, sig00000001, sig00000001, sig00000001, sig00000003, sig00000001, sig00000003}),
    .BCIN({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .ALUMODE({sig00000001, sig00000001, sig00000001, sig00000001}),
    .PCOUT({sig0000007c, sig0000007b, sig0000007a, sig00000079, sig00000078, sig00000077, sig00000076, sig00000075, sig00000073, sig00000072, 
sig00000071, sig00000070, sig0000006f, sig0000006e, sig0000006d, sig0000006c, sig0000006b, sig0000006a, sig00000068, sig00000067, sig00000066, 
sig00000065, sig00000064, sig00000063, sig00000062, sig00000061, sig00000060, sig0000005f, sig0000005d, sig0000005c, sig0000005b, sig0000005a, 
sig00000059, sig00000058, sig00000057, sig00000056, sig00000055, sig00000054, sig00000082, sig00000081, sig00000080, sig0000007f, sig0000007e, 
sig0000007d, sig00000074, sig00000069, sig0000005e, sig00000053}),
    .P({\NLW_blk00000003_P<47>_UNCONNECTED , \NLW_blk00000003_P<46>_UNCONNECTED , \NLW_blk00000003_P<45>_UNCONNECTED , 
\NLW_blk00000003_P<44>_UNCONNECTED , \NLW_blk00000003_P<43>_UNCONNECTED , \NLW_blk00000003_P<42>_UNCONNECTED , \NLW_blk00000003_P<41>_UNCONNECTED , 
\NLW_blk00000003_P<40>_UNCONNECTED , \NLW_blk00000003_P<39>_UNCONNECTED , \NLW_blk00000003_P<38>_UNCONNECTED , \NLW_blk00000003_P<37>_UNCONNECTED , 
\NLW_blk00000003_P<36>_UNCONNECTED , \NLW_blk00000003_P<35>_UNCONNECTED , \NLW_blk00000003_P<34>_UNCONNECTED , \NLW_blk00000003_P<33>_UNCONNECTED , 
\NLW_blk00000003_P<32>_UNCONNECTED , \NLW_blk00000003_P<31>_UNCONNECTED , \NLW_blk00000003_P<30>_UNCONNECTED , \NLW_blk00000003_P<29>_UNCONNECTED , 
\NLW_blk00000003_P<28>_UNCONNECTED , \NLW_blk00000003_P<27>_UNCONNECTED , \NLW_blk00000003_P<26>_UNCONNECTED , \NLW_blk00000003_P<25>_UNCONNECTED , 
\NLW_blk00000003_P<24>_UNCONNECTED , \NLW_blk00000003_P<23>_UNCONNECTED , \NLW_blk00000003_P<22>_UNCONNECTED , \NLW_blk00000003_P<21>_UNCONNECTED , 
\NLW_blk00000003_P<20>_UNCONNECTED , \NLW_blk00000003_P<19>_UNCONNECTED , \NLW_blk00000003_P<18>_UNCONNECTED , \NLW_blk00000003_P<17>_UNCONNECTED , 
\NLW_blk00000003_P<16>_UNCONNECTED , \NLW_blk00000003_P<15>_UNCONNECTED , \NLW_blk00000003_P<14>_UNCONNECTED , \NLW_blk00000003_P<13>_UNCONNECTED , 
\NLW_blk00000003_P<12>_UNCONNECTED , \NLW_blk00000003_P<11>_UNCONNECTED , \NLW_blk00000003_P<10>_UNCONNECTED , \NLW_blk00000003_P<9>_UNCONNECTED , 
\NLW_blk00000003_P<8>_UNCONNECTED , \NLW_blk00000003_P<7>_UNCONNECTED , \NLW_blk00000003_P<6>_UNCONNECTED , \NLW_blk00000003_P<5>_UNCONNECTED , 
\NLW_blk00000003_P<4>_UNCONNECTED , \NLW_blk00000003_P<3>_UNCONNECTED , \NLW_blk00000003_P<2>_UNCONNECTED , \NLW_blk00000003_P<1>_UNCONNECTED , 
\NLW_blk00000003_P<0>_UNCONNECTED }),
    .BCOUT({\NLW_blk00000003_BCOUT<17>_UNCONNECTED , \NLW_blk00000003_BCOUT<16>_UNCONNECTED , \NLW_blk00000003_BCOUT<15>_UNCONNECTED , 
\NLW_blk00000003_BCOUT<14>_UNCONNECTED , \NLW_blk00000003_BCOUT<13>_UNCONNECTED , \NLW_blk00000003_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000003_BCOUT<11>_UNCONNECTED , \NLW_blk00000003_BCOUT<10>_UNCONNECTED , \NLW_blk00000003_BCOUT<9>_UNCONNECTED , 
\NLW_blk00000003_BCOUT<8>_UNCONNECTED , \NLW_blk00000003_BCOUT<7>_UNCONNECTED , \NLW_blk00000003_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000003_BCOUT<5>_UNCONNECTED , \NLW_blk00000003_BCOUT<4>_UNCONNECTED , \NLW_blk00000003_BCOUT<3>_UNCONNECTED , 
\NLW_blk00000003_BCOUT<2>_UNCONNECTED , \NLW_blk00000003_BCOUT<1>_UNCONNECTED , \NLW_blk00000003_BCOUT<0>_UNCONNECTED }),
    .ACIN({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .ACOUT({sig0000004a, sig00000049, sig00000048, sig00000047, sig00000046, sig00000045, sig00000044, sig00000043, sig00000042, sig00000041, 
sig0000003f, sig0000003e, sig0000003d, sig0000003c, sig0000003b, sig0000003a, sig00000039, sig00000038, sig00000037, sig00000036, sig00000052, 
sig00000051, sig00000050, sig0000004f, sig0000004e, sig0000004d, sig0000004c, sig0000004b, sig00000040, sig00000035}),
    .CARRYOUT({\NLW_blk00000003_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000003_CARRYOUT<2>_UNCONNECTED , \NLW_blk00000003_CARRYOUT<1>_UNCONNECTED , 
\NLW_blk00000003_CARRYOUT<0>_UNCONNECTED })
  );
  DSP48E #(
    .ACASCREG ( 0 ),
    .ALUMODEREG ( 0 ),
    .AREG ( 0 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "CASCADE" ),
    .BCASCREG ( 0 ),
    .BREG ( 0 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 0 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 0 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT" ),
    .USE_PATTERN_DETECT ( "PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'hFFFFFFFFFFE0 ))
  blk00000004 (
    .CARRYIN(sig00000001),
    .CEA1(sig00000001),
    .CEA2(sig00000001),
    .CEB1(sig00000001),
    .CEB2(sig00000001),
    .CEC(sig00000001),
    .CECTRL(sig00000001),
    .CEP(sig00000001),
    .CEM(sig00000001),
    .CECARRYIN(sig00000001),
    .CEMULTCARRYIN(sig00000001),
    .CLK(clk),
    .RSTA(sig00000001),
    .RSTB(sig00000001),
    .RSTC(sig00000001),
    .RSTCTRL(sig00000001),
    .RSTP(sig00000001),
    .RSTM(sig00000001),
    .RSTALLCARRYIN(sig00000001),
    .CEALUMODE(sig00000001),
    .RSTALUMODE(sig00000001),
    .PATTERNBDETECT(NLW_blk00000004_PATTERNBDETECT_UNCONNECTED),
    .PATTERNDETECT(sig00000128),
    .OVERFLOW(NLW_blk00000004_OVERFLOW_UNCONNECTED),
    .UNDERFLOW(NLW_blk00000004_UNDERFLOW_UNCONNECTED),
    .CARRYCASCIN(sig00000001),
    .CARRYCASCOUT(NLW_blk00000004_CARRYCASCOUT_UNCONNECTED),
    .MULTSIGNIN(sig00000001),
    .MULTSIGNOUT(NLW_blk00000004_MULTSIGNOUT_UNCONNECTED),
    .A({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001
, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .PCIN({sig0000007c, sig0000007b, sig0000007a, sig00000079, sig00000078, sig00000077, sig00000076, sig00000075, sig00000073, sig00000072, 
sig00000071, sig00000070, sig0000006f, sig0000006e, sig0000006d, sig0000006c, sig0000006b, sig0000006a, sig00000068, sig00000067, sig00000066, 
sig00000065, sig00000064, sig00000063, sig00000062, sig00000061, sig00000060, sig0000005f, sig0000005d, sig0000005c, sig0000005b, sig0000005a, 
sig00000059, sig00000058, sig00000057, sig00000056, sig00000055, sig00000054, sig00000082, sig00000081, sig00000080, sig0000007f, sig0000007e, 
sig0000007d, sig00000074, sig00000069, sig0000005e, sig00000053}),
    .B({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001
, sig00000003, b[22], b[21], b[20], b[19], b[18], b[17]}),
    .C({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001
, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001}),
    .CARRYINSEL({sig00000001, sig00000001, sig00000001}),
    .OPMODE({sig00000003, sig00000001, sig00000003, sig00000001, sig00000003, sig00000001, sig00000003}),
    .BCIN({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .ALUMODE({sig00000001, sig00000001, sig00000001, sig00000001}),
    .PCOUT({sig000000e9, sig000000e8, sig000000e7, sig000000e6, sig000000e5, sig000000e4, sig000000e3, sig000000e2, sig000000e0, sig000000df, 
sig000000de, sig000000dd, sig000000dc, sig000000db, sig000000da, sig000000d9, sig000000d8, sig000000d7, sig000000d5, sig000000d4, sig000000d3, 
sig000000d2, sig000000d1, sig000000d0, sig000000cf, sig000000ce, sig000000cd, sig000000cc, sig000000ca, sig000000c9, sig000000c8, sig000000c7, 
sig000000c6, sig000000c5, sig000000c4, sig000000c3, sig000000c2, sig000000c1, sig000000ef, sig000000ee, sig000000ed, sig000000ec, sig000000eb, 
sig000000ea, sig000000e1, sig000000d6, sig000000cb, sig000000c0}),
    .P({\NLW_blk00000004_P<47>_UNCONNECTED , \NLW_blk00000004_P<46>_UNCONNECTED , \NLW_blk00000004_P<45>_UNCONNECTED , 
\NLW_blk00000004_P<44>_UNCONNECTED , \NLW_blk00000004_P<43>_UNCONNECTED , \NLW_blk00000004_P<42>_UNCONNECTED , \NLW_blk00000004_P<41>_UNCONNECTED , 
\NLW_blk00000004_P<40>_UNCONNECTED , \NLW_blk00000004_P<39>_UNCONNECTED , \NLW_blk00000004_P<38>_UNCONNECTED , \NLW_blk00000004_P<37>_UNCONNECTED , 
\NLW_blk00000004_P<36>_UNCONNECTED , \NLW_blk00000004_P<35>_UNCONNECTED , \NLW_blk00000004_P<34>_UNCONNECTED , \NLW_blk00000004_P<33>_UNCONNECTED , 
\NLW_blk00000004_P<32>_UNCONNECTED , \NLW_blk00000004_P<31>_UNCONNECTED , sig00000118, sig00000117, sig00000116, sig00000115, sig00000114, sig00000113
, sig00000111, sig00000110, sig0000010f, sig0000010e, sig0000010d, sig0000010c, sig0000010b, sig0000010a, sig00000109, sig00000108, sig00000120, 
sig0000011f, sig0000011e, sig0000011d, sig0000011c, sig0000011b, sig0000011a, sig00000119, sig00000112, sig00000107, 
\NLW_blk00000004_P<4>_UNCONNECTED , \NLW_blk00000004_P<3>_UNCONNECTED , \NLW_blk00000004_P<2>_UNCONNECTED , \NLW_blk00000004_P<1>_UNCONNECTED , 
\NLW_blk00000004_P<0>_UNCONNECTED }),
    .BCOUT({\NLW_blk00000004_BCOUT<17>_UNCONNECTED , \NLW_blk00000004_BCOUT<16>_UNCONNECTED , \NLW_blk00000004_BCOUT<15>_UNCONNECTED , 
\NLW_blk00000004_BCOUT<14>_UNCONNECTED , \NLW_blk00000004_BCOUT<13>_UNCONNECTED , \NLW_blk00000004_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000004_BCOUT<11>_UNCONNECTED , \NLW_blk00000004_BCOUT<10>_UNCONNECTED , \NLW_blk00000004_BCOUT<9>_UNCONNECTED , 
\NLW_blk00000004_BCOUT<8>_UNCONNECTED , \NLW_blk00000004_BCOUT<7>_UNCONNECTED , \NLW_blk00000004_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000004_BCOUT<5>_UNCONNECTED , \NLW_blk00000004_BCOUT<4>_UNCONNECTED , \NLW_blk00000004_BCOUT<3>_UNCONNECTED , 
\NLW_blk00000004_BCOUT<2>_UNCONNECTED , \NLW_blk00000004_BCOUT<1>_UNCONNECTED , \NLW_blk00000004_BCOUT<0>_UNCONNECTED }),
    .ACIN({sig0000004a, sig00000049, sig00000048, sig00000047, sig00000046, sig00000045, sig00000044, sig00000043, sig00000042, sig00000041, 
sig0000003f, sig0000003e, sig0000003d, sig0000003c, sig0000003b, sig0000003a, sig00000039, sig00000038, sig00000037, sig00000036, sig00000052, 
sig00000051, sig00000050, sig0000004f, sig0000004e, sig0000004d, sig0000004c, sig0000004b, sig00000040, sig00000035}),
    .ACOUT({\NLW_blk00000004_ACOUT<29>_UNCONNECTED , \NLW_blk00000004_ACOUT<28>_UNCONNECTED , \NLW_blk00000004_ACOUT<27>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<26>_UNCONNECTED , \NLW_blk00000004_ACOUT<25>_UNCONNECTED , \NLW_blk00000004_ACOUT<24>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<23>_UNCONNECTED , \NLW_blk00000004_ACOUT<22>_UNCONNECTED , \NLW_blk00000004_ACOUT<21>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<20>_UNCONNECTED , \NLW_blk00000004_ACOUT<19>_UNCONNECTED , \NLW_blk00000004_ACOUT<18>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<17>_UNCONNECTED , \NLW_blk00000004_ACOUT<16>_UNCONNECTED , \NLW_blk00000004_ACOUT<15>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<14>_UNCONNECTED , \NLW_blk00000004_ACOUT<13>_UNCONNECTED , \NLW_blk00000004_ACOUT<12>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<11>_UNCONNECTED , \NLW_blk00000004_ACOUT<10>_UNCONNECTED , \NLW_blk00000004_ACOUT<9>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<8>_UNCONNECTED , \NLW_blk00000004_ACOUT<7>_UNCONNECTED , \NLW_blk00000004_ACOUT<6>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<5>_UNCONNECTED , \NLW_blk00000004_ACOUT<4>_UNCONNECTED , \NLW_blk00000004_ACOUT<3>_UNCONNECTED , 
\NLW_blk00000004_ACOUT<2>_UNCONNECTED , \NLW_blk00000004_ACOUT<1>_UNCONNECTED , \NLW_blk00000004_ACOUT<0>_UNCONNECTED }),
    .CARRYOUT({\NLW_blk00000004_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000004_CARRYOUT<2>_UNCONNECTED , \NLW_blk00000004_CARRYOUT<1>_UNCONNECTED , 
\NLW_blk00000004_CARRYOUT<0>_UNCONNECTED })
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000005 (
    .C(clk),
    .D(sig00000121),
    .R(sig00000001),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/sign_op )
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000006 (
    .C(clk),
    .D(sig00000106),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [9])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000007 (
    .C(clk),
    .D(sig00000105),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [8])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000008 (
    .C(clk),
    .D(sig00000104),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [7])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000009 (
    .C(clk),
    .D(sig00000103),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [6])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000000a (
    .C(clk),
    .D(sig00000102),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [5])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000000b (
    .C(clk),
    .D(sig00000101),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [4])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000000c (
    .C(clk),
    .D(sig00000100),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [3])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000000d (
    .C(clk),
    .D(sig000000ff),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [2])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000000e (
    .C(clk),
    .D(sig000000fb),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [1])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000000f (
    .C(clk),
    .D(sig000000f0),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [0])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000010 (
    .C(clk),
    .D(sig000000fa),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [19])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000011 (
    .C(clk),
    .D(sig000000f9),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [18])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000012 (
    .C(clk),
    .D(sig000000bf),
    .R(sig00000124),
    .S(sig00000122),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [7])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000013 (
    .C(clk),
    .D(sig000000fe),
    .R(sig00000126),
    .S(sig00000125),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [22])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000014 (
    .C(clk),
    .D(sig000000be),
    .R(sig00000124),
    .S(sig00000122),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [6])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000015 (
    .C(clk),
    .D(sig000000f8),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [17])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000016 (
    .C(clk),
    .D(sig000000f7),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [16])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000017 (
    .C(clk),
    .D(sig000000fd),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [21])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000018 (
    .C(clk),
    .D(sig000000bd),
    .R(sig00000124),
    .S(sig00000122),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [5])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000019 (
    .C(clk),
    .D(sig000000f6),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [15])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000001a (
    .C(clk),
    .D(sig000000fc),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [20])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000001b (
    .C(clk),
    .D(sig000000f5),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [14])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000001c (
    .C(clk),
    .D(sig000000bb),
    .R(sig00000124),
    .S(sig00000122),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [3])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000001d (
    .C(clk),
    .D(sig000000bc),
    .R(sig00000124),
    .S(sig00000122),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [4])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000001e (
    .C(clk),
    .D(sig000000f4),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [13])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk0000001f (
    .C(clk),
    .D(sig000000ba),
    .R(sig00000124),
    .S(sig00000122),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [2])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000020 (
    .C(clk),
    .D(sig000000f3),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [12])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000021 (
    .C(clk),
    .D(sig000000b9),
    .R(sig00000124),
    .S(sig00000122),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [1])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000022 (
    .C(clk),
    .D(sig000000f2),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [11])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000023 (
    .C(clk),
    .D(sig000000f1),
    .R(sig00000123),
    .S(sig00000001),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/mant_op [10])
  );
  FDRS #(
    .INIT ( 1'b0 ))
  blk00000024 (
    .C(clk),
    .D(sig000000b8),
    .R(sig00000124),
    .S(sig00000122),
    .Q(\U0/op_inst/FLT_PT_OP/MULT.OP/OP/exp_op [0])
  );
  DSP48E #(
    .ACASCREG ( 0 ),
    .ALUMODEREG ( 0 ),
    .AREG ( 0 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 0 ),
    .BREG ( 0 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 0 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 0 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "NONE" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'h3FFFFFFFFFFF ))
  blk00000025 (
    .CARRYIN(sig00000001),
    .CEA1(sig00000001),
    .CEA2(sig00000001),
    .CEB1(sig00000001),
    .CEB2(sig00000001),
    .CEC(sig00000001),
    .CECTRL(sig00000001),
    .CEP(sig00000001),
    .CEM(sig00000001),
    .CECARRYIN(sig00000001),
    .CEMULTCARRYIN(sig00000001),
    .CLK(clk),
    .RSTA(sig00000001),
    .RSTB(sig00000001),
    .RSTC(sig00000001),
    .RSTCTRL(sig00000001),
    .RSTP(sig00000001),
    .RSTM(sig00000001),
    .RSTALLCARRYIN(sig00000001),
    .CEALUMODE(sig00000001),
    .RSTALUMODE(sig00000001),
    .PATTERNBDETECT(NLW_blk00000025_PATTERNBDETECT_UNCONNECTED),
    .PATTERNDETECT(NLW_blk00000025_PATTERNDETECT_UNCONNECTED),
    .OVERFLOW(NLW_blk00000025_OVERFLOW_UNCONNECTED),
    .UNDERFLOW(NLW_blk00000025_UNDERFLOW_UNCONNECTED),
    .CARRYCASCIN(sig00000001),
    .CARRYCASCOUT(NLW_blk00000025_CARRYCASCOUT_UNCONNECTED),
    .MULTSIGNIN(sig00000001),
    .MULTSIGNOUT(NLW_blk00000025_MULTSIGNOUT_UNCONNECTED),
    .A({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000003, sig00000001, sig00000001
, sig00000001, sig00000001, sig00000001, sig00000001, sig00000003, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .PCIN({sig000000e9, sig000000e8, sig000000e7, sig000000e6, sig000000e5, sig000000e4, sig000000e3, sig000000e2, sig000000e0, sig000000df, 
sig000000de, sig000000dd, sig000000dc, sig000000db, sig000000da, sig000000d9, sig000000d8, sig000000d7, sig000000d5, sig000000d4, sig000000d3, 
sig000000d2, sig000000d1, sig000000d0, sig000000cf, sig000000ce, sig000000cd, sig000000cc, sig000000ca, sig000000c9, sig000000c8, sig000000c7, 
sig000000c6, sig000000c5, sig000000c4, sig000000c3, sig000000c2, sig000000c1, sig000000ef, sig000000ee, sig000000ed, sig000000ec, sig000000eb, 
sig000000ea, sig000000e1, sig000000d6, sig000000cb, sig000000c0}),
    .B({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001
, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .C({sig000000b6, sig000000b5, sig000000b4, sig000000b3, sig000000b2, sig000000b1, sig000000b0, sig00000001, sig000000b7, sig000000b6, sig000000b5
, sig000000b4, sig000000b3, sig000000b2, sig000000b1, sig000000b0, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000003, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001}),
    .CARRYINSEL({sig00000001, sig00000001, sig00000001}),
    .OPMODE({sig00000001, sig00000001, sig00000003, sig00000003, sig00000003, sig00000003, sig00000003}),
    .BCIN({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .ALUMODE({sig00000001, sig00000001, sig00000001, sig00000001}),
    .PCOUT({\NLW_blk00000025_PCOUT<47>_UNCONNECTED , \NLW_blk00000025_PCOUT<46>_UNCONNECTED , \NLW_blk00000025_PCOUT<45>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<44>_UNCONNECTED , \NLW_blk00000025_PCOUT<43>_UNCONNECTED , \NLW_blk00000025_PCOUT<42>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<41>_UNCONNECTED , \NLW_blk00000025_PCOUT<40>_UNCONNECTED , \NLW_blk00000025_PCOUT<39>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<38>_UNCONNECTED , \NLW_blk00000025_PCOUT<37>_UNCONNECTED , \NLW_blk00000025_PCOUT<36>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<35>_UNCONNECTED , \NLW_blk00000025_PCOUT<34>_UNCONNECTED , \NLW_blk00000025_PCOUT<33>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<32>_UNCONNECTED , \NLW_blk00000025_PCOUT<31>_UNCONNECTED , \NLW_blk00000025_PCOUT<30>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<29>_UNCONNECTED , \NLW_blk00000025_PCOUT<28>_UNCONNECTED , \NLW_blk00000025_PCOUT<27>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<26>_UNCONNECTED , \NLW_blk00000025_PCOUT<25>_UNCONNECTED , \NLW_blk00000025_PCOUT<24>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<23>_UNCONNECTED , \NLW_blk00000025_PCOUT<22>_UNCONNECTED , \NLW_blk00000025_PCOUT<21>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<20>_UNCONNECTED , \NLW_blk00000025_PCOUT<19>_UNCONNECTED , \NLW_blk00000025_PCOUT<18>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<17>_UNCONNECTED , \NLW_blk00000025_PCOUT<16>_UNCONNECTED , \NLW_blk00000025_PCOUT<15>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<14>_UNCONNECTED , \NLW_blk00000025_PCOUT<13>_UNCONNECTED , \NLW_blk00000025_PCOUT<12>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<11>_UNCONNECTED , \NLW_blk00000025_PCOUT<10>_UNCONNECTED , \NLW_blk00000025_PCOUT<9>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<8>_UNCONNECTED , \NLW_blk00000025_PCOUT<7>_UNCONNECTED , \NLW_blk00000025_PCOUT<6>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<5>_UNCONNECTED , \NLW_blk00000025_PCOUT<4>_UNCONNECTED , \NLW_blk00000025_PCOUT<3>_UNCONNECTED , 
\NLW_blk00000025_PCOUT<2>_UNCONNECTED , \NLW_blk00000025_PCOUT<1>_UNCONNECTED , \NLW_blk00000025_PCOUT<0>_UNCONNECTED }),
    .P({sig000000ab, sig000000aa, sig000000a9, sig000000a8, sig000000a7, sig000000a6, sig000000a5, \NLW_blk00000025_P<40>_UNCONNECTED , sig000000a4, 
sig000000a3, sig000000a2, sig000000a1, sig000000a0, sig0000009f, sig0000009e, sig0000009d, \NLW_blk00000025_P<31>_UNCONNECTED , sig0000009c, 
sig0000009b, sig0000009a, sig00000099, sig00000098, sig00000097, sig00000096, sig00000095, sig00000094, sig00000093, sig00000092, sig00000091, 
sig00000090, sig0000008f, sig0000008e, sig0000008d, sig0000008c, sig0000008b, sig0000008a, sig00000089, sig00000088, sig000000ae, sig000000ad, 
sig000000ac, \NLW_blk00000025_P<6>_UNCONNECTED , \NLW_blk00000025_P<5>_UNCONNECTED , \NLW_blk00000025_P<4>_UNCONNECTED , 
\NLW_blk00000025_P<3>_UNCONNECTED , \NLW_blk00000025_P<2>_UNCONNECTED , \NLW_blk00000025_P<1>_UNCONNECTED , \NLW_blk00000025_P<0>_UNCONNECTED }),
    .BCOUT({\NLW_blk00000025_BCOUT<17>_UNCONNECTED , \NLW_blk00000025_BCOUT<16>_UNCONNECTED , \NLW_blk00000025_BCOUT<15>_UNCONNECTED , 
\NLW_blk00000025_BCOUT<14>_UNCONNECTED , \NLW_blk00000025_BCOUT<13>_UNCONNECTED , \NLW_blk00000025_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000025_BCOUT<11>_UNCONNECTED , \NLW_blk00000025_BCOUT<10>_UNCONNECTED , \NLW_blk00000025_BCOUT<9>_UNCONNECTED , 
\NLW_blk00000025_BCOUT<8>_UNCONNECTED , \NLW_blk00000025_BCOUT<7>_UNCONNECTED , \NLW_blk00000025_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000025_BCOUT<5>_UNCONNECTED , \NLW_blk00000025_BCOUT<4>_UNCONNECTED , \NLW_blk00000025_BCOUT<3>_UNCONNECTED , 
\NLW_blk00000025_BCOUT<2>_UNCONNECTED , \NLW_blk00000025_BCOUT<1>_UNCONNECTED , \NLW_blk00000025_BCOUT<0>_UNCONNECTED }),
    .ACIN({sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, 
sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001, sig00000001}),
    .ACOUT({\NLW_blk00000025_ACOUT<29>_UNCONNECTED , \NLW_blk00000025_ACOUT<28>_UNCONNECTED , \NLW_blk00000025_ACOUT<27>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<26>_UNCONNECTED , \NLW_blk00000025_ACOUT<25>_UNCONNECTED , \NLW_blk00000025_ACOUT<24>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<23>_UNCONNECTED , \NLW_blk00000025_ACOUT<22>_UNCONNECTED , \NLW_blk00000025_ACOUT<21>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<20>_UNCONNECTED , \NLW_blk00000025_ACOUT<19>_UNCONNECTED , \NLW_blk00000025_ACOUT<18>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<17>_UNCONNECTED , \NLW_blk00000025_ACOUT<16>_UNCONNECTED , \NLW_blk00000025_ACOUT<15>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<14>_UNCONNECTED , \NLW_blk00000025_ACOUT<13>_UNCONNECTED , \NLW_blk00000025_ACOUT<12>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<11>_UNCONNECTED , \NLW_blk00000025_ACOUT<10>_UNCONNECTED , \NLW_blk00000025_ACOUT<9>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<8>_UNCONNECTED , \NLW_blk00000025_ACOUT<7>_UNCONNECTED , \NLW_blk00000025_ACOUT<6>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<5>_UNCONNECTED , \NLW_blk00000025_ACOUT<4>_UNCONNECTED , \NLW_blk00000025_ACOUT<3>_UNCONNECTED , 
\NLW_blk00000025_ACOUT<2>_UNCONNECTED , \NLW_blk00000025_ACOUT<1>_UNCONNECTED , \NLW_blk00000025_ACOUT<0>_UNCONNECTED }),
    .CARRYOUT({sig00000087, \NLW_blk00000025_CARRYOUT<2>_UNCONNECTED , \NLW_blk00000025_CARRYOUT<1>_UNCONNECTED , 
\NLW_blk00000025_CARRYOUT<0>_UNCONNECTED })
  );
  MUXCY   blk00000026 (
    .CI(sig00000015),
    .DI(sig00000001),
    .S(sig00000019),
    .O(sig00000030)
  );
  MUXCY   blk00000027 (
    .CI(sig00000014),
    .DI(sig00000001),
    .S(sig00000018),
    .O(sig00000015)
  );
  MUXCY   blk00000028 (
    .CI(sig00000013),
    .DI(sig00000001),
    .S(sig00000017),
    .O(sig00000014)
  );
  MUXCY   blk00000029 (
    .CI(sig00000003),
    .DI(sig00000001),
    .S(sig00000016),
    .O(sig00000013)
  );
  MUXCY   blk0000002a (
    .CI(sig0000000e),
    .DI(sig00000001),
    .S(sig00000012),
    .O(sig00000025)
  );
  MUXCY   blk0000002b (
    .CI(sig0000000d),
    .DI(sig00000001),
    .S(sig00000011),
    .O(sig0000000e)
  );
  MUXCY   blk0000002c (
    .CI(sig0000000c),
    .DI(sig00000001),
    .S(sig00000010),
    .O(sig0000000d)
  );
  MUXCY   blk0000002d (
    .CI(sig00000003),
    .DI(sig00000001),
    .S(sig0000000f),
    .O(sig0000000c)
  );
  MUXCY   blk0000002e (
    .CI(sig00000003),
    .DI(b[23]),
    .S(sig00000026),
    .O(sig0000001a)
  );
  XORCY   blk0000002f (
    .CI(sig00000003),
    .LI(sig00000026),
    .O(sig000000b0)
  );
  MUXCY   blk00000030 (
    .CI(sig0000001a),
    .DI(b[24]),
    .S(sig00000027),
    .O(sig0000001b)
  );
  XORCY   blk00000031 (
    .CI(sig0000001a),
    .LI(sig00000027),
    .O(sig000000b1)
  );
  MUXCY   blk00000032 (
    .CI(sig0000001b),
    .DI(b[25]),
    .S(sig00000028),
    .O(sig0000001c)
  );
  XORCY   blk00000033 (
    .CI(sig0000001b),
    .LI(sig00000028),
    .O(sig000000b2)
  );
  MUXCY   blk00000034 (
    .CI(sig0000001c),
    .DI(b[26]),
    .S(sig00000029),
    .O(sig0000001d)
  );
  XORCY   blk00000035 (
    .CI(sig0000001c),
    .LI(sig00000029),
    .O(sig000000b3)
  );
  MUXCY   blk00000036 (
    .CI(sig0000001d),
    .DI(b[27]),
    .S(sig0000002a),
    .O(sig0000001e)
  );
  XORCY   blk00000037 (
    .CI(sig0000001d),
    .LI(sig0000002a),
    .O(sig000000b4)
  );
  MUXCY   blk00000038 (
    .CI(sig0000001e),
    .DI(b[28]),
    .S(sig0000002b),
    .O(sig0000001f)
  );
  XORCY   blk00000039 (
    .CI(sig0000001e),
    .LI(sig0000002b),
    .O(sig000000b5)
  );
  MUXCY   blk0000003a (
    .CI(sig0000001f),
    .DI(b[29]),
    .S(sig0000002c),
    .O(sig00000020)
  );
  XORCY   blk0000003b (
    .CI(sig0000001f),
    .LI(sig0000002c),
    .O(sig000000b6)
  );
  MUXCY   blk0000003c (
    .CI(sig00000020),
    .DI(b[30]),
    .S(sig0000002d),
    .O(sig00000031)
  );
  XORCY   blk0000003d (
    .CI(sig00000020),
    .LI(sig0000002d),
    .O(sig000000b7)
  );
  LUT3 #(
    .INIT ( 8'hC4 ))
  blk0000003e (
    .I0(sig00000025),
    .I1(sig00000023),
    .I2(sig0000002f),
    .O(sig00000002)
  );
  LUT6 #(
    .INIT ( 64'h0000022000000FF0 ))
  blk0000003f (
    .I0(sig00000030),
    .I1(sig00000024),
    .I2(a[31]),
    .I3(b[31]),
    .I4(sig00000002),
    .I5(sig0000002e),
    .O(sig00000121)
  );
  LUT5 #(
    .INIT ( 32'h00000001 ))
  blk00000040 (
    .I0(b[18]),
    .I1(b[19]),
    .I2(b[20]),
    .I3(b[21]),
    .I4(b[22]),
    .O(sig00000019)
  );
  LUT5 #(
    .INIT ( 32'h00000001 ))
  blk00000041 (
    .I0(a[18]),
    .I1(a[19]),
    .I2(a[20]),
    .I3(a[21]),
    .I4(a[22]),
    .O(sig00000012)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000001 ))
  blk00000042 (
    .I0(b[12]),
    .I1(b[13]),
    .I2(b[14]),
    .I3(b[15]),
    .I4(b[16]),
    .I5(b[17]),
    .O(sig00000018)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000001 ))
  blk00000043 (
    .I0(a[12]),
    .I1(a[13]),
    .I2(a[14]),
    .I3(a[15]),
    .I4(a[16]),
    .I5(a[17]),
    .O(sig00000011)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000001 ))
  blk00000044 (
    .I0(b[6]),
    .I1(b[7]),
    .I2(b[8]),
    .I3(b[9]),
    .I4(b[10]),
    .I5(b[11]),
    .O(sig00000017)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000001 ))
  blk00000045 (
    .I0(a[6]),
    .I1(a[7]),
    .I2(a[8]),
    .I3(a[9]),
    .I4(a[10]),
    .I5(a[11]),
    .O(sig00000010)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000001 ))
  blk00000046 (
    .I0(b[0]),
    .I1(b[1]),
    .I2(b[2]),
    .I3(b[3]),
    .I4(b[4]),
    .I5(b[5]),
    .O(sig00000016)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000001 ))
  blk00000047 (
    .I0(a[0]),
    .I1(a[1]),
    .I2(a[2]),
    .I3(a[3]),
    .I4(a[4]),
    .I5(a[5]),
    .O(sig0000000f)
  );
  LUT6 #(
    .INIT ( 64'h005D00005D585D58 ))
  blk00000048 (
    .I0(sig0000002e),
    .I1(sig00000030),
    .I2(sig00000024),
    .I3(sig0000002f),
    .I4(sig00000025),
    .I5(sig00000023),
    .O(sig00000034)
  );
  LUT3 #(
    .INIT ( 8'hFE ))
  blk00000049 (
    .I0(b[25]),
    .I1(b[24]),
    .I2(b[23]),
    .O(sig00000005)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000001 ))
  blk0000004a (
    .I0(b[30]),
    .I1(b[29]),
    .I2(b[28]),
    .I3(b[27]),
    .I4(b[26]),
    .I5(sig00000005),
    .O(sig0000002f)
  );
  LUT3 #(
    .INIT ( 8'h80 ))
  blk0000004b (
    .I0(b[25]),
    .I1(b[24]),
    .I2(b[23]),
    .O(sig00000009)
  );
  LUT6 #(
    .INIT ( 64'h8000000000000000 ))
  blk0000004c (
    .I0(b[30]),
    .I1(b[29]),
    .I2(b[28]),
    .I3(b[27]),
    .I4(b[26]),
    .I5(sig00000009),
    .O(sig0000002e)
  );
  LUT3 #(
    .INIT ( 8'hFE ))
  blk0000004d (
    .I0(a[25]),
    .I1(a[24]),
    .I2(a[23]),
    .O(sig0000000a)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000001 ))
  blk0000004e (
    .I0(a[30]),
    .I1(a[29]),
    .I2(a[28]),
    .I3(a[27]),
    .I4(a[26]),
    .I5(sig0000000a),
    .O(sig00000024)
  );
  LUT3 #(
    .INIT ( 8'h80 ))
  blk0000004f (
    .I0(a[25]),
    .I1(a[24]),
    .I2(a[23]),
    .O(sig0000000b)
  );
  LUT6 #(
    .INIT ( 64'h8000000000000000 ))
  blk00000050 (
    .I0(a[30]),
    .I1(a[29]),
    .I2(a[28]),
    .I3(a[27]),
    .I4(a[26]),
    .I5(sig0000000b),
    .O(sig00000023)
  );
  LUT4 #(
    .INIT ( 16'hFFFE ))
  blk00000051 (
    .I0(sig000000b3),
    .I1(sig000000b2),
    .I2(sig000000b1),
    .I3(sig000000b0),
    .O(sig00000004)
  );
  LUT6 #(
    .INIT ( 64'h0000000000000004 ))
  blk00000052 (
    .I0(sig00000031),
    .I1(sig000000b7),
    .I2(sig000000b6),
    .I3(sig000000b5),
    .I4(sig000000b4),
    .I5(sig00000004),
    .O(sig00000032)
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  blk00000053 (
    .I0(b[30]),
    .I1(a[30]),
    .O(sig0000002d)
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  blk00000054 (
    .I0(b[29]),
    .I1(a[29]),
    .O(sig0000002c)
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  blk00000055 (
    .I0(b[28]),
    .I1(a[28]),
    .O(sig0000002b)
  );
  LUT4 #(
    .INIT ( 16'hF888 ))
  blk00000056 (
    .I0(sig000000b0),
    .I1(sig00000021),
    .I2(sig000000b7),
    .I3(sig00000031),
    .O(sig00000022)
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  blk00000057 (
    .I0(b[27]),
    .I1(a[27]),
    .O(sig0000002a)
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  blk00000058 (
    .I0(b[26]),
    .I1(a[26]),
    .O(sig00000029)
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  blk00000059 (
    .I0(b[25]),
    .I1(a[25]),
    .O(sig00000028)
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  blk0000005a (
    .I0(b[24]),
    .I1(a[24]),
    .O(sig00000027)
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  blk0000005b (
    .I0(b[23]),
    .I1(a[23]),
    .O(sig00000026)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000005c (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000109),
    .I3(sig0000008d),
    .I4(sig00000108),
    .I5(sig0000008e),
    .O(sig00000106)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000005d (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000108),
    .I3(sig0000008c),
    .I4(sig00000120),
    .I5(sig0000008d),
    .O(sig00000105)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000005e (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000120),
    .I3(sig0000008b),
    .I4(sig0000011f),
    .I5(sig0000008c),
    .O(sig00000104)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000005f (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000011f),
    .I3(sig0000008a),
    .I4(sig0000011e),
    .I5(sig0000008b),
    .O(sig00000103)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000060 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000011e),
    .I3(sig00000089),
    .I4(sig0000011d),
    .I5(sig0000008a),
    .O(sig00000102)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000061 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000011d),
    .I3(sig00000088),
    .I4(sig0000011c),
    .I5(sig00000089),
    .O(sig00000101)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000062 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000011c),
    .I3(sig000000ae),
    .I4(sig0000011b),
    .I5(sig00000088),
    .O(sig00000100)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000063 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000011b),
    .I3(sig000000ad),
    .I4(sig0000011a),
    .I5(sig000000ae),
    .O(sig000000ff)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000064 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000117),
    .I3(sig0000009a),
    .I4(sig00000116),
    .I5(sig0000009b),
    .O(sig000000fe)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000065 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000116),
    .I3(sig00000099),
    .I4(sig00000115),
    .I5(sig0000009a),
    .O(sig000000fd)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000066 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000115),
    .I3(sig00000098),
    .I4(sig00000114),
    .I5(sig00000099),
    .O(sig000000fc)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000067 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000011a),
    .I3(sig000000ac),
    .I4(sig00000119),
    .I5(sig000000ad),
    .O(sig000000fb)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000068 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000114),
    .I3(sig00000097),
    .I4(sig00000113),
    .I5(sig00000098),
    .O(sig000000fa)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000069 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000113),
    .I3(sig00000096),
    .I4(sig00000111),
    .I5(sig00000097),
    .O(sig000000f9)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000006a (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000111),
    .I3(sig00000095),
    .I4(sig00000110),
    .I5(sig00000096),
    .O(sig000000f8)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000006b (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig00000110),
    .I3(sig00000094),
    .I4(sig0000010f),
    .I5(sig00000095),
    .O(sig000000f7)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000006c (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000010f),
    .I3(sig00000093),
    .I4(sig0000010e),
    .I5(sig00000094),
    .O(sig000000f6)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000006d (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000010e),
    .I3(sig00000092),
    .I4(sig0000010d),
    .I5(sig00000093),
    .O(sig000000f5)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000006e (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000010d),
    .I3(sig00000091),
    .I4(sig0000010c),
    .I5(sig00000092),
    .O(sig000000f4)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk0000006f (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000010c),
    .I3(sig00000090),
    .I4(sig0000010b),
    .I5(sig00000091),
    .O(sig000000f3)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000070 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000010b),
    .I3(sig0000008f),
    .I4(sig0000010a),
    .I5(sig00000090),
    .O(sig000000f2)
  );
  LUT6 #(
    .INIT ( 64'hFDB9ECA875316420 ))
  blk00000071 (
    .I0(sig00000118),
    .I1(sig000000af),
    .I2(sig0000010a),
    .I3(sig0000008e),
    .I4(sig00000109),
    .I5(sig0000008f),
    .O(sig000000f1)
  );
  LUT5 #(
    .INIT ( 32'h75207733 ))
  blk00000072 (
    .I0(sig00000118),
    .I1(sig000000b7),
    .I2(sig00000021),
    .I3(sig00000032),
    .I4(sig00000031),
    .O(sig00000006)
  );
  LUT5 #(
    .INIT ( 32'hFFFF1110 ))
  blk00000073 (
    .I0(sig00000023),
    .I1(sig0000002e),
    .I2(sig00000022),
    .I3(sig00000006),
    .I4(sig00000034),
    .O(sig00000126)
  );
  LUT5 #(
    .INIT ( 32'hECEC8880 ))
  blk00000074 (
    .I0(sig00000021),
    .I1(sig00000031),
    .I2(sig000000b0),
    .I3(sig00000118),
    .I4(sig000000b7),
    .O(sig00000007)
  );
  LUT6 #(
    .INIT ( 64'h3030302030303030 ))
  blk00000075 (
    .I0(sig00000008),
    .I1(sig00000122),
    .I2(sig00000126),
    .I3(sig0000002e),
    .I4(sig00000023),
    .I5(sig00000032),
    .O(sig00000124)
  );
  LUT6 #(
    .INIT ( 64'hFEFCFCFC10303030 ))
  blk00000076 (
    .I0(sig0000009c),
    .I1(sig00000118),
    .I2(sig000000ab),
    .I3(sig00000112),
    .I4(sig00000107),
    .I5(sig000000a3),
    .O(sig000000be)
  );
  LUT6 #(
    .INIT ( 64'hFEFCFCFC10303030 ))
  blk00000077 (
    .I0(sig0000009c),
    .I1(sig00000118),
    .I2(sig000000aa),
    .I3(sig00000112),
    .I4(sig00000107),
    .I5(sig000000a2),
    .O(sig000000bd)
  );
  LUT6 #(
    .INIT ( 64'hFEFCFCFC10303030 ))
  blk00000078 (
    .I0(sig0000009c),
    .I1(sig00000118),
    .I2(sig000000a9),
    .I3(sig00000112),
    .I4(sig00000107),
    .I5(sig000000a1),
    .O(sig000000bc)
  );
  LUT6 #(
    .INIT ( 64'hFEFCFCFC10303030 ))
  blk00000079 (
    .I0(sig0000009c),
    .I1(sig00000118),
    .I2(sig000000a8),
    .I3(sig00000112),
    .I4(sig00000107),
    .I5(sig000000a0),
    .O(sig000000bb)
  );
  LUT6 #(
    .INIT ( 64'hFEFCFCFC10303030 ))
  blk0000007a (
    .I0(sig0000009c),
    .I1(sig00000118),
    .I2(sig000000a7),
    .I3(sig00000112),
    .I4(sig00000107),
    .I5(sig0000009f),
    .O(sig000000ba)
  );
  LUT6 #(
    .INIT ( 64'hFEFCFCFC10303030 ))
  blk0000007b (
    .I0(sig0000009c),
    .I1(sig00000118),
    .I2(sig000000a6),
    .I3(sig00000112),
    .I4(sig00000107),
    .I5(sig0000009e),
    .O(sig000000b9)
  );
  LUT6 #(
    .INIT ( 64'hFEFCFCFC10303030 ))
  blk0000007c (
    .I0(sig0000009c),
    .I1(sig00000118),
    .I2(sig000000a5),
    .I3(sig00000112),
    .I4(sig00000107),
    .I5(sig0000009d),
    .O(sig000000b8)
  );
  LUT5 #(
    .INIT ( 32'hFFFFFF10 ))
  blk0000007d (
    .I0(sig00000024),
    .I1(sig0000002f),
    .I2(sig00000007),
    .I3(sig00000023),
    .I4(sig0000002e),
    .O(sig00000122)
  );
  LUT6 #(
    .INIT ( 64'hAA88AA08AA88AA88 ))
  blk0000007e (
    .I0(sig00000112),
    .I1(sig00000118),
    .I2(sig00000127),
    .I3(sig00000107),
    .I4(sig00000119),
    .I5(sig00000128),
    .O(sig000000af)
  );
  LUT6 #(
    .INIT ( 64'hFFFFFFFF02200AA0 ))
  blk0000007f (
    .I0(sig00000118),
    .I1(sig000000b0),
    .I2(sig00000031),
    .I3(sig000000b7),
    .I4(sig00000021),
    .I5(sig00000034),
    .O(sig00000008)
  );
  LUT6 #(
    .INIT ( 64'hFFFFFFFFFFFF1110 ))
  blk00000080 (
    .I0(sig00000023),
    .I1(sig0000002e),
    .I2(sig00000022),
    .I3(sig00000006),
    .I4(sig00000122),
    .I5(sig00000034),
    .O(sig00000123)
  );
  LUT6 #(
    .INIT ( 64'h0A0A0A0A0808080A ))
  blk00000081 (
    .I0(sig00000122),
    .I1(sig0000002e),
    .I2(sig00000034),
    .I3(sig00000006),
    .I4(sig00000022),
    .I5(sig00000023),
    .O(sig00000125)
  );
  LUT6 #(
    .INIT ( 64'h8000000000000000 ))
  blk00000082 (
    .I0(sig00000031),
    .I1(sig000000b5),
    .I2(sig000000b4),
    .I3(sig000000b3),
    .I4(sig000000b2),
    .I5(sig000000b1),
    .O(sig00000033)
  );
  MUXF7   blk00000083 (
    .I0(sig00000001),
    .I1(sig00000033),
    .S(sig000000b6),
    .O(sig00000021)
  );
  LUT6 #(
    .INIT ( 64'hAEBE849C26360414 ))
  blk00000084 (
    .I0(sig00000118),
    .I1(sig00000112),
    .I2(sig00000107),
    .I3(sig00000127),
    .I4(sig00000119),
    .I5(sig000000ac),
    .O(sig00000085)
  );
  LUT5 #(
    .INIT ( 32'hB9EC3164 ))
  blk00000085 (
    .I0(sig00000118),
    .I1(sig00000112),
    .I2(sig00000119),
    .I3(sig00000107),
    .I4(sig000000ac),
    .O(sig00000086)
  );
  MUXF7   blk00000086 (
    .I0(sig00000086),
    .I1(sig00000085),
    .S(sig00000128),
    .O(sig000000f0)
  );
  LUT6 #(
    .INIT ( 64'hFFFFFFFFF9999999 ))
  blk00000087 (
    .I0(sig00000087),
    .I1(sig000000b7),
    .I2(sig00000107),
    .I3(sig0000009c),
    .I4(sig00000112),
    .I5(sig00000118),
    .O(sig00000083)
  );
  LUT6 #(
    .INIT ( 64'h1001300330033003 ))
  blk00000088 (
    .I0(sig00000112),
    .I1(sig00000118),
    .I2(sig00000087),
    .I3(sig000000b7),
    .I4(sig00000107),
    .I5(sig0000009c),
    .O(sig00000084)
  );
  MUXF7   blk00000089 (
    .I0(sig00000084),
    .I1(sig00000083),
    .S(sig000000a4),
    .O(sig000000bf)
  );

// synthesis translate_on

endmodule

// synthesis translate_off

`ifndef GLBL
`define GLBL

`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;

    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule

`endif

// synthesis translate_on
